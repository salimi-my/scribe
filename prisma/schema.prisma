// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mongodb"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id                      String      @id @map("_id") // Matches kinde user id
  email                   String      @unique

  File                    File[]
  Message                 Message[]

  createdAt               DateTime    @default(now())
  updatedAt               DateTime    @updatedAt
  
  stripeCustomerId        String?     @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId    String?     @unique @map(name: "stripe_subscription_id")
  stripePriceId           String?     @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd  DateTime?   @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String

  uploadStatus  UploadStatus  @default(PENDING)

  url           String
  key           String

  messages      Message[]

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  userId        String?
  User          User?         @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Message {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  text          String 

  isUserMessage Boolean

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  userId        String?
  User          User?     @relation(fields: [userId], references: [id])

  fileId        String?   @db.ObjectId
  File          File?     @relation(fields: [fileId], references: [id])
}